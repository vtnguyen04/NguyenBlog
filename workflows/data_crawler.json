{"createdAt":"2025-10-05T08:08:37.343Z","updatedAt":"2025-10-06T07:58:23.000Z","id":"71k4lUUO5ihKo9GB","name":"data_crawler","active":false,"isArchived":false,"nodes":[{"parameters":{"url":"https://vietnamnet.vn/cong-nghe/ai","sendHeaders":true,"headerParameters":{"parameters":[{}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[64,1152],"id":"8e010ddf-3a7d-4736-83de-edcb40055403","name":"AI"},{"parameters":{"operation":"removeItemsSeenInPreviousExecutions","dedupeValue":"={{ $json.original_title }}","options":{}},"type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[1312,1152],"id":"eeb9c923-8786-4938-86e3-933eb23faab3","name":"Remove Duplicates4"},{"parameters":{"language":"python","pythonCode":"\nfrom bs4 import BeautifulSoup\nimport json\n\n# Giả sử input_data đã được lấy từ node trước đó\nraw_html = str(_input.all()[0].json.raw_content)\n\nsoup = BeautifulSoup(raw_html, 'html.parser')\n\n# --- BẮT ĐẦU TRÍCH XUẤT (PHIÊN BẢN CẢI TIẾN) ---\n\ntitle_tag = soup.find('h1', class_='content-detail-title')\nsapo_tag = soup.find('h2', class_='content-detail-sapo')\nmain_content_div = soup.find('div', id='maincontent')\n\narticle_title = title_tag.get_text(strip=True) if title_tag else \"\"\narticle_sapo = sapo_tag.get_text(strip=True) if sapo_tag else \"\"\n\narticle_body = []\nif main_content_div:\n    # **THAY ĐỔI QUAN TRỌNG: Thêm 'h2', 'h3' vào danh sách các thẻ cần tìm**\n    elements = main_content_div.find_all(['p', 'figure', 'h2', 'h3'], recursive=False)\n    \n    for element in elements:\n        # **THÊM MỚI: Xử lý các thẻ heading**\n        if element.name in ['h2', 'h3']:\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"heading\",\n                    \"level\": int(element.name[1]), # Lấy số 2 từ 'h2', 3 từ 'h3'\n                    \"content\": text\n                })\n        \n        # Xử lý đoạn văn\n        elif element.name == 'p':\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"paragraph\",\n                    \"content\": text\n                })\n        \n        # Xử lý hình ảnh\n        elif element.name == 'figure':\n            img_tag = element.find('img')\n            caption_tag = element.find('figcaption')\n            \n            if img_tag:\n                img_src = img_tag.get('data-original') or (img_tag.get('data-srcset').split('?')[0] if img_tag.get('data-srcset') else img_tag.get('src'))\n                caption = caption_tag.get_text(strip=True) if caption_tag else \"\"\n                \n                article_body.append({\n                    \"type\": \"image\",\n                    \"src\": img_src,\n                    \"caption\": caption\n                })\n\n# Cấu trúc mới này sẽ chứa cả thông tin về heading\nfull_article_structure = {\n    \"title\": article_title,\n    \"sapo\": article_sapo,\n    \"body\": article_body\n}\n\n# Cấu trúc cho AI giờ cũng có thể bao gồm heading để AI hiểu ngữ cảnh tốt hơn\ntext_only_for_ai = {\n    \"title\": article_title,\n    \"sapo\": article_sapo,\n    \"sections\": []\n}\ncurrent_section = None\nfor item in article_body:\n    if item['type'] == 'heading':\n        if current_section:\n            text_only_for_ai['sections'].append(current_section)\n        current_section = {\"heading\": item['content'], \"paragraphs\": []}\n    elif item['type'] == 'paragraph' and current_section:\n        current_section['paragraphs'].append(item['content'])\nif current_section:\n    text_only_for_ai['sections'].append(current_section)\n\n\nresult = {\n    \"original_title\": article_title,\n    \"original_link\": \"https://vietnamnet.vn\"+_('HTML parser link AI').all()[0].json.article_links,\n    \"text_structure_for_ai_json\": json.dumps(text_only_for_ai, ensure_ascii=False, indent=2),\n    \"full_article_structure_json\": json.dumps(full_article_structure, ensure_ascii=False, indent=2),\n    \"type_news\": \"AI news\"\n}\n\nreturn [result]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1072,1152],"id":"5b543f41-ca55-4609-ba25-180405ec46cb","name":"raw data processor web 3"},{"parameters":{"url":"=https://vietnamnet.vn{{ $json.article_links }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[624,1152],"id":"3461bdb8-3627-4135-a353-278e133de093","name":"HTTP Request1"},{"parameters":{"jsonSchemaExample":"{\n  \"main_title\": \"Tiêu đề chính chuẩn SEO do bạn tạo\",\n  \"rewritten_sections\": [\n    {\n      \"heading\": \"Tiêu đề của Mục Lớn 1 (Cấp 2)\",\n      \"heading_level\": 2,\n      \"paragraphs\": [\"Đoạn văn giới thiệu tổng quan về mục lớn này...\"]\n    },\n    {\n      \"heading\": \"Tiêu đề của Mục Con 1.1 (Cấp 3 - Phân tích khía cạnh A)\",\n      \"heading_level\": 3,\n      \"paragraphs\": [\"Nội dung đi sâu vào chi tiết của khía cạnh A...\"]\n    },\n    {\n      \"heading\": \"Tiêu đề của Mục Con 1.2 (Cấp 3 - Phân tích khía cạnh B)\",\n      \"heading_level\": 3,\n      \"paragraphs\": [\"Nội dung mang tính phân tích đa chiều...\"]\n    },\n    {\n      \"heading\": \"Kết luận\",\n      \"heading_level\": 2,\n      \"paragraphs\": [\"Đoạn văn tóm tắt, tổng kết lại toàn bộ bài viết và đưa ra định hướng cho người đọc.\"]\n    },\n    {\n      \"heading\": \"FAQ câu hỏi thường gặp\",\n      \"heading_level\": 3,\n      \"paragraphs\": []\n    },\n    {\n      \"heading\": \"Câu hỏi chi tiết 1?\",\n      \"heading_level\": 4,\n      \"paragraphs\": [\"Câu trả lời chi tiết cho câu hỏi 1...\"]\n    },\n    {\n      \"heading\": \"Câu hỏi chi tiết 2?\",\n      \"heading_level\": 4,\n      \"paragraphs\": [\"Câu trả lời chi tiết cho câu hỏi 2...\"]\n    }\n  ],\n  \"tags\": [\"tag-goi-y-1\", \"tag-goi-y-2\"],\n  \"featured_internal_link\": {\n    \"title\": \"Tiêu đề bài viết liên quan nhất mà bạn đã chọn\",\n    \"link\": \"URL tương ứng của bài viết đó\"\n  }\n}\n\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[2240,656],"id":"e0f78e41-c9bd-40f1-a21c-d6be46f572d9","name":"social media content3"},{"parameters":{"url":"https://tapchibitcoin.io/bitcoin/quy-dinh-phap-ly","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[96,96],"id":"312965de-b666-4476-87a5-cf4f9c91500d","name":"phap luat","retryOnFail":true,"executeOnce":false,"onError":"continueRegularOutput"},{"parameters":{"operation":"removeItemsSeenInPreviousExecutions","dedupeValue":"={{ $json.original_title }}","options":{}},"type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[1504,640],"id":"14ce0d23-183a-42fd-b339-4377c110d3db","name":"Remove Duplicates3"},{"parameters":{"operation":"removeItemsSeenInPreviousExecutions","dedupeValue":"={{ $json.original_title }}","options":{}},"type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[1504,352],"id":"8e85cdf2-e865-4fc3-91cc-2d22460550b1","name":"Remove Duplicates"},{"parameters":{"operation":"removeItemsSeenInPreviousExecutions","dedupeValue":"={{ $json.original_title }}","options":{}},"type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[1216,96],"id":"ead54a02-dd57-4641-a498-0bfd27349189","name":"Remove Duplicates2"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"article_links","cssSelector":"a.GridCellContent-sc-b822dd94-10","returnValue":"attribute","attribute":"href"},{"key":"Title","cssSelector":"a.GridCellContent-sc-b822dd94-10 "},{"key":"Timestamp","cssSelector":"div.LongAgoText-sc-b822dd94-8 "}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[320,640],"id":"a265dfed-8688-4f26-95ef-8cbe5214eb81","name":"HTML parser link analysis1"},{"parameters":{"url":"https://beincrypto.com/type/analysis/","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[64,640],"id":"a454d515-8ef4-4d64-8be8-a31738c766fd","name":"beincryto-analysis1"},{"parameters":{"language":"python","pythonCode":"from bs4 import BeautifulSoup\nimport json\n\n# --- 1. LẤY DỮ LIỆU THÔ ---\ninput_data = _input.all()\nraw_html = str(input_data[0].json.raw_content)\nsoup = BeautifulSoup(raw_html, 'html.parser')\n\n# --- 2. TRÍCH XUẤT DỮ LIỆU THEO CẤU TRÚC PHẲNG ---\n# Tìm vùng chứa nội dung chính\ncontent_container = soup.find('div', class_='gutenberg-content')\n\n# Đây sẽ là một danh sách các khối nội dung (heading, paragraph, image) theo đúng thứ tự\narticle_body = []\n\nif content_container:\n    # Tìm tất cả các thẻ nội dung chính\n    elements = content_container.find_all(['h2', 'h3', 'p', 'figure'], recursive=False)\n    \n    for element in elements:\n        # Xử lý các thẻ heading\n        if element.name in ['h2', 'h3']:\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"heading\",\n                    \"level\": int(element.name[1]), # Lấy số 2 từ 'h2', 3 từ 'h3'\n                    \"content\": text\n                })\n        \n        # Xử lý đoạn văn\n        elif element.name == 'p':\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"paragraph\",\n                    \"content\": text\n                })\n        \n        # Xử lý hình ảnh\n        elif element.name == 'figure' and element.find('img') and 'wp-block-embed' not in element.get('class', []):\n            img_tag = element.find('img')\n            figcaption_tag = element.find('figcaption')\n            \n            if img_tag:\n                # Ưu tiên lấy ảnh từ 'data-src' hoặc các thuộc tính lazy-load khác nếu có\n                img_src = img_tag.get('data-src') or img_tag.get('src', '')\n                \n                # Dọn dẹp caption (xóa các thẻ a bên trong)\n                caption = ''\n                if figcaption_tag:\n                    for a_tag in figcaption_tag.find_all('a'):\n                        a_tag.unwrap()\n                    caption = figcaption_tag.get_text(strip=True)\n                \n                # Lưu cấu trúc ảnh thay vì HTML thô\n                article_body.append({\n                    \"type\": \"image\",\n                    \"src\": img_src,\n                    \"caption\": caption\n                })\n\n# --- 3. TẠO CÁC CẤU TRÚC JSON ĐẦU RA ---\n\n# Cấu trúc đầy đủ, linh hoạt để node sau sử dụng\nfull_article_structure = {\n    \"title\": _('News Formatter').all()[0].json.Title,\n    \"sapo\": \"\", # Trang này không có sapo rõ ràng, để trống\n    \"body\": article_body\n}\n\n# Cấu trúc chỉ chứa text, được nhóm lại để AI dễ hiểu ngữ cảnh\ntext_structure_for_ai = {\"sections\": []}\ncurrent_section = {\"heading\": \"Mở đầu\", \"paragraphs\": []}\nfor item in article_body:\n    if item['type'] == 'heading':\n        if current_section['paragraphs']: # Chỉ thêm section nếu có nội dung\n            text_structure_for_ai['sections'].append(current_section)\n        current_section = {\"heading\": item['content'], \"paragraphs\": []}\n    elif item['type'] == 'paragraph':\n        current_section['paragraphs'].append(item['content'])\n# Thêm section cuối cùng\nif current_section['paragraphs']:\n    text_structure_for_ai['sections'].append(current_section)\n\n\n# --- 4. TRẢ VỀ KẾT QUẢ ---\nresult = {\n    \"original_title\": _('News Formatter').all()[0].json.Title,\n    \"original_link\": _('News Formatter').all()[0].json.article_links,\n    \"text_structure_for_ai_json\": json.dumps(text_structure_for_ai, ensure_ascii=False),\n    \"full_article_structure_json\": json.dumps(full_article_structure, ensure_ascii=False),\n    \"type_news\": \"Analysis\"\n}\n\nreturn [result]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1280,640],"id":"f3b37637-4021-4b0a-bd21-f9c940cb9a93","name":"raw data processor web "},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"raw_content","cssSelector":"div.ant-card-body","returnValue":"html","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1056,640],"id":"1d17e2c0-f53a-49d4-8b73-7804b2a11d3d","name":"HTML beinCrypto2"},{"parameters":{"url":"={{ $json.article_links }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[832,640],"id":"fc2a4460-b190-4df7-8c76-8fd8a834f4cc","name":"HTTP Request4"},{"parameters":{"jsCode":"$input.first().json.article_links = \"https://beincrypto.com\" + $input.first().json.article_links\n\nreturn $input.first().json"},"id":"7e1e9559-324e-42b1-8e6b-233321b71c96","name":"News Formatter","type":"n8n-nodes-base.code","position":[608,640],"typeVersion":2},{"parameters":{"rule":{"interval":[{"field":"hours","hoursInterval":2,"triggerAtMinute":15}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-832,656],"id":"653c87ae-cd52-4209-b6ca-e65d136a4501","name":"Schedule Trigger"},{"parameters":{"language":"python","pythonCode":"from bs4 import BeautifulSoup\nimport json\n\n# --- 1. LẤY DỮ LIỆU THÔ ---\ninput_data = _input.all()\nraw_html = str(input_data[0].json.raw_content)\nsoup = BeautifulSoup(raw_html, 'html.parser')\n\n# --- 2. TRÍCH XUẤT DỮ LIỆU THEO CẤU TRÚC PHẲNG (LINH HOẠT VÀ CHÍNH XÁC HƠN) ---\ncontent_container = soup.find('div', class_='the_content')\n\n# Danh sách này sẽ chứa tất cả các khối nội dung (heading, paragraph, image) theo đúng thứ tự\narticle_body = []\n\nif content_container:\n    # Tìm tất cả các thẻ nội dung quan trọng\n    elements = content_container.find_all(['h2', 'h3', 'p', 'figure'], recursive=False)\n    \n    for element in elements:\n        # Xử lý các thẻ heading (h2, h3, ...)\n        if element.name in ['h2', 'h3']:\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"heading\",\n                    \"level\": int(element.name[1]),\n                    \"content\": text\n                })\n        \n        # Xử lý đoạn văn\n        elif element.name == 'p':\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"paragraph\",\n                    \"content\": text\n                })\n        \n        # Xử lý hình ảnh\n        elif element.name == 'figure' and element.find('img') and 'wp-block-embed' not in element.get('class', []):\n            img_tag = element.find('img')\n            figcaption_tag = element.find('figcaption')\n            \n            if img_tag:\n                img_src = img_tag.get('data-src') or img_tag.get('src', '')\n                \n                caption = ''\n                if figcaption_tag:\n                    for a_tag in figcaption_tag.find_all('a'):\n                        a_tag.unwrap()\n                    caption = figcaption_tag.get_text(strip=True)\n                \n                # Lưu dữ liệu có cấu trúc thay vì HTML thô để dễ dàng tái tạo sau này\n                article_body.append({\n                    \"type\": \"image\",\n                    \"src\": img_src,\n                    \"caption\": caption\n                })\n\n# --- 3. TẠO CÁC CẤU TRÚC JSON ĐẦU RA ---\n\n# Cấu trúc đầy đủ, chứa toàn bộ thông tin đã trích xuất\nfull_article_structure = {\n    \"title\": _('HTML parser link analysis').all()[0].json.Title,\n    \"sapo\": \"\", # Trang này không có sapo, để trống\n    \"body\": article_body\n}\n\n# Cấu trúc chỉ chứa text, được nhóm lại thành section để AI dễ hiểu ngữ cảnh\ntext_structure_for_ai = {\"sections\": []}\ncurrent_section = {\"heading\": \"Mở đầu\", \"paragraphs\": []}\nfor item in article_body:\n    if item['type'] == 'heading':\n        if current_section['paragraphs']:\n            text_structure_for_ai['sections'].append(current_section)\n        current_section = {\"heading\": item['content'], \"paragraphs\": []}\n    elif item['type'] == 'paragraph':\n        current_section['paragraphs'].append(item['content'])\nif current_section['paragraphs']:\n    text_structure_for_ai['sections'].append(current_section)\n\n\n# --- 4. TRẢ VỀ KẾT QUẢ ---\nresult = {\n    \"original_title\": _('HTML parser link analysis').all()[0].json.Title,\n    \"original_link\": _('HTML parser link analysis').all()[0].json.article_links,\n    \"text_structure_for_ai_json\": json.dumps(text_structure_for_ai, ensure_ascii=False),\n    \"full_article_structure_json\": json.dumps(full_article_structure, ensure_ascii=False),\n    \"type_news\": \"News\"\n}\n\nreturn [result]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[992,96],"id":"d8241423-5e22-45a8-bc37-bceddb40dc16","name":"raw data processor web 1"},{"parameters":{"language":"python","pythonCode":"from bs4 import BeautifulSoup\nimport json\n\n# --- 1. LẤY DỮ LIỆU THÔ ---\ninput_data = _input.all()\nraw_html = str(input_data[0].json.raw_content)\nsoup = BeautifulSoup(raw_html, 'html.parser')\n\n# --- 2. TRÍCH XUẤT DỮ LIỆU THEO CẤU TRÚC PHẲNG (LINH HOẠT HƠN) ---\ncontent_container = soup.find('div', class_='gutenberg-content')\n\n# Danh sách này sẽ chứa các khối nội dung theo đúng thứ tự\narticle_body = []\n\nif content_container:\n    # Tìm tất cả các thẻ nội dung quan trọng\n    elements = content_container.find_all(['h2', 'h3', 'p', 'figure'], recursive=False)\n    \n    for element in elements:\n        # Xử lý các thẻ heading (h2, h3, ...)\n        if element.name in ['h2', 'h3']:\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"heading\",\n                    \"level\": int(element.name[1]),\n                    \"content\": text\n                })\n        \n        # Xử lý đoạn văn\n        elif element.name == 'p':\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"paragraph\",\n                    \"content\": text\n                })\n        \n        # Xử lý hình ảnh\n        elif element.name == 'figure' and element.find('img') and 'wp-block-embed' not in element.get('class', []):\n            img_tag = element.find('img')\n            figcaption_tag = element.find('figcaption')\n            \n            if img_tag:\n                img_src = img_tag.get('data-src') or img_tag.get('src', '')\n                \n                caption = ''\n                if figcaption_tag:\n                    for a_tag in figcaption_tag.find_all('a'):\n                        a_tag.unwrap()\n                    caption = figcaption_tag.get_text(strip=True)\n                \n                # Lưu dữ liệu có cấu trúc thay vì HTML thô để dễ dàng tái tạo sau này\n                article_body.append({\n                    \"type\": \"image\",\n                    \"src\": img_src,\n                    \"caption\": caption\n                })\n\n# --- 3. TẠO CÁC CẤU TRÚC JSON ĐẦU RA ---\n\n# Cấu trúc đầy đủ, chứa toàn bộ thông tin đã trích xuất\nfull_article_structure = {\n    \"title\": _('News Formatter1').all()[0].json.Title,\n    \"sapo\": \"\", # Trang này không có sapo, để trống\n    \"body\": article_body\n}\n\n# Cấu trúc chỉ chứa text, được nhóm lại thành section để AI dễ hiểu ngữ cảnh\ntext_structure_for_ai = {\"sections\": []}\ncurrent_section = {\"heading\": \"Mở đầu\", \"paragraphs\": []}\nfor item in article_body:\n    if item['type'] == 'heading':\n        if current_section['paragraphs']:\n            text_structure_for_ai['sections'].append(current_section)\n        current_section = {\"heading\": item['content'], \"paragraphs\": []}\n    elif item['type'] == 'paragraph':\n        current_section['paragraphs'].append(item['content'])\nif current_section['paragraphs']:\n    text_structure_for_ai['sections'].append(current_section)\n\n\n# --- 4. TRẢ VỀ KẾT QUẢ ---\nresult = {\n    \"original_title\": _('News Formatter1').all()[0].json.Title,\n    \"original_link\": _('News Formatter1').all()[0].json.article_links,\n    \"text_structure_for_ai_json\": json.dumps(text_structure_for_ai, ensure_ascii=False),\n    \"full_article_structure_json\": json.dumps(full_article_structure, ensure_ascii=False),\n    \"type_news\": \"News\"\n}\n\nreturn [result]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1264,352],"id":"5989d600-258d-452e-ae14-fbb110089e2a","name":"raw data processor web 2"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"raw_content","cssSelector":"div.post_content","returnValue":"html","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[768,96],"id":"46ad9f5c-3bb8-407a-a408-0cc5f145bffe","name":"HTML beinCrypto1"},{"parameters":{"url":"={{ $json.article_links }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[544,96],"id":"e9f52967-379e-46c6-868c-1a19d69e2111","name":"HTTP Request"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"raw_content","cssSelector":"div.ant-card-body","returnValue":"html","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[1056,352],"id":"d5c3f44b-eb83-4c7a-b590-83f7638f7436","name":"HTML beinCrypto"},{"parameters":{"url":"={{ $json.article_links }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[832,352],"id":"45beceac-8709-4f11-b924-1adef1794a8c","name":"HTTP Request3"},{"parameters":{"jsCode":"$input.first().json.article_links = \"https://beincrypto.com\" + $input.first().json.article_links\n\nreturn $input.first().json"},"id":"c7dc5c40-9199-485a-8425-5712057d563f","name":"News Formatter1","type":"n8n-nodes-base.code","position":[608,352],"typeVersion":2},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"article_links","cssSelector":"h3.fs-20 a","returnValue":"attribute","attribute":"href"},{"key":"Title","cssSelector":"h3.fs-20 a"},{"key":"Timestamp","cssSelector":"ul.post_meta li:nth-child(1)"}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[320,96],"id":"34631808-02ce-44e4-81dd-cb61f1e11e26","name":"HTML parser link analysis"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"article_links","cssSelector":"a.GridCellContent-sc-b822dd94-10","returnValue":"attribute","attribute":"href"},{"key":"Title","cssSelector":"a.GridCellContent-sc-b822dd94-10 "},{"key":"Timestamp","cssSelector":"div.LongAgoText-sc-b822dd94-8 "}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[352,352],"id":"63a53474-f8a6-484f-ac8c-5ee66ae2e9a0","name":"HTML parser link news"},{"parameters":{"url":"https://beincrypto.com/type/news/","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[64,352],"id":"12a41efc-e843-4751-9f00-3f8964a893d6","name":"beincryto-news"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"raw_content","cssSelector":"div.main-v1 ","returnValue":"html"}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[848,1152],"id":"d7382a77-af9c-4dd7-bec8-aff8c49624f2","name":"HTML AI news"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"article_links","cssSelector":"div.verticalPost__avt a","returnValue":"attribute","attribute":"href"},{"key":"Title","cssSelector":"div.verticalPost__avt a","returnValue":"attribute","attribute":"title"}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[336,1152],"id":"6e66458f-a183-4ba6-a6b4-67d504fe0064","name":"HTML parser link AI"},{"parameters":{"url":"https://genk.vn/ai.chn","sendHeaders":true,"headerParameters":{"parameters":[{}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[64,1488],"id":"09b80c7a-96b3-4111-a2e7-aae1827833c4","name":"AI2"},{"parameters":{"operation":"removeItemsSeenInPreviousExecutions","dedupeValue":"={{ $json.original_title }}","options":{}},"type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[1296,1488],"id":"d5c91442-da96-404c-93e2-6e841e1c156b","name":"Remove Duplicates6"},{"parameters":{"language":"python","pythonCode":"\nfrom bs4 import BeautifulSoup\nimport json\n\n# Giả sử input_data đã được lấy từ node trước đó\nraw_html = str(_input.all()[0].json.raw_content)\n\nsoup = BeautifulSoup(raw_html, 'html.parser')\n\n# --- BẮT ĐẦU TRÍCH XUẤT (PHIÊN BẢN CẢI TIẾN) ---\n\ntitle_tag = soup.find('h1', class_='kbwc-title')\narticle_title = title_tag.get_text(strip=True) if title_tag else \"\"\n\n# **THAY ĐỔI 2: Tìm Sapo (đoạn tóm tắt)**\n# Sapo nằm trong thẻ <h2> với class \"knc-sapo\"\nsapo_tag = soup.find('h2', class_='knc-sapo')\narticle_sapo = sapo_tag.get_text(strip=True) if sapo_tag else \"\"\n\n# **THAY ĐỔI 3: Tìm khối nội dung chính**\n# Toàn bộ nội dung bài viết nằm trong <div> có id=\"ContentDetail\"\nmain_content_div = soup.find('div', id='ContentDetail')\n\narticle_body = []\nif main_content_div:\n    # Logic bên trong này gần như không đổi vì nó đủ linh hoạt\n    # Nó tìm tất cả các thẻ <p>, <figure>, <h2>, <h3> bên trong khối nội dung chính\n    elements = main_content_div.find_all(['p', 'figure', 'h2', 'h3'], recursive=False)\n    \n    for element in elements:\n        # Xử lý các thẻ heading (nếu có)\n        if element.name in ['h2', 'h3']:\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"heading\",\n                    \"level\": int(element.name[1]),\n                    \"content\": text\n                })\n        \n        # Xử lý đoạn văn\n        elif element.name == 'p':\n            # Bỏ qua các figure được bọc trong thẻ p (một cấu trúc đặc biệt của genk)\n            if element.find('figure'):\n                continue\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"paragraph\",\n                    \"content\": text\n                })\n        \n        # Xử lý hình ảnh\n        elif element.name == 'figure':\n            img_tag = element.find('img')\n            caption_tag = element.find('figcaption')\n            \n            if img_tag:\n                # GenK dùng thuộc tính 'src' trực tiếp\n                img_src = img_tag.get('src')\n                caption = caption_tag.get_text(strip=True) if caption_tag else \"\"\n                \n                article_body.append({\n                    \"type\": \"image\",\n                    \"src\": img_src,\n                    \"caption\": caption\n                })\n\n# --- PHẦN TẠO JSON OUTPUT (KHÔNG CẦN THAY ĐỔI) ---\n\n# Cấu trúc đầy đủ chứa cả thông tin về heading, p, images\nfull_article_structure = {\n    \"title\": article_title,\n    \"sapo\": article_sapo,\n    \"body\": article_body\n}\n\n# Cấu trúc chỉ chứa text cho AI\ntext_only_for_ai = {\n    \"title\": article_title,\n    \"sapo\": article_sapo,\n    \"sections\": []\n}\ncurrent_section = None\n# Thêm một section \"Mở đầu\" để chứa các đoạn văn trước heading đầu tiên\ninitial_paragraphs = []\nfound_first_heading = False\n\nfor item in article_body:\n    if item['type'] == 'heading':\n        if not found_first_heading and initial_paragraphs:\n             text_only_for_ai['sections'].append({\"heading\": \"Mở đầu\", \"paragraphs\": initial_paragraphs})\n        found_first_heading = True\n        \n        if current_section:\n            text_only_for_ai['sections'].append(current_section)\n        current_section = {\"heading\": item['content'], \"paragraphs\": []}\n        \n    elif item['type'] == 'paragraph':\n        if not found_first_heading:\n            initial_paragraphs.append(item['content'])\n        elif current_section:\n            current_section['paragraphs'].append(item['content'])\n\nif current_section:\n    text_only_for_ai['sections'].append(current_section)\n# Nếu cả bài không có heading nào, gom hết vào phần \"Mở đầu\"\nelif not found_first_heading and initial_paragraphs:\n    text_only_for_ai['sections'].append({\"heading\": \"Mở đầu\", \"paragraphs\": initial_paragraphs})\n\n\nresult = {\n    \"original_title\": article_title,\n    \"original_link\": \"https://genk.vn\"+_('HTML parser link AI2').all()[0].json.article_links,\n    \"text_structure_for_ai_json\": json.dumps(text_only_for_ai, ensure_ascii=False, indent=2),\n    \"full_article_structure_json\": json.dumps(full_article_structure, ensure_ascii=False, indent=2),\n    \"type_news\": \"AI news\"\n}\n\nreturn [result]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1072,1488],"id":"a588a5d3-fe0b-4b77-9dd9-aadf6296a7ce","name":"raw data processor web 5"},{"parameters":{"url":"=https://genk.vn{{ $json.article_links }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[624,1488],"id":"9347c8ef-f6ca-4427-a36e-18057f532c1b","name":"HTTP Request5"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"raw_content","cssSelector":"div.kbwc-body ","returnValue":"html"}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[848,1488],"id":"e022227a-f540-4b41-af1d-3749ec300c35","name":"HTML AI news2"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"article_links","cssSelector":"div.gknews_box a","returnValue":"attribute","attribute":"href"},{"key":"Title","cssSelector":"div.verticalPost__avt a","returnValue":"attribute","attribute":"title"}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[352,1488],"id":"18463272-21ca-42f9-bbe6-41d33aa087dc","name":"HTML parser link AI2"},{"parameters":{"model":{"__rl":true,"value":"gpt-5-mini","mode":"list","cachedResultName":"gpt-5-mini"},"options":{"timeout":100000}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1920,656],"id":"aacae015-158e-4572-abff-acee7c141f86","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"fusjifoCPA1JwyYW","name":"302"}}},{"parameters":{"method":"POST","url":"https://learningchain.vn/wp-json/wp/v2/media","authentication":"genericCredentialType","genericAuthType":"httpBasicAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Disposition ","value":"=attachment;filename=\"{{ $json.output.url_slug }}.jpg\" "}]},"sendBody":true,"contentType":"binaryData","inputDataFieldName":"bg","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[4096,1056],"id":"ef4706e6-cda3-4fed-8698-a0c9696501af","name":"HTTP Request11","credentials":{"httpBasicAuth":{"id":"CNR92lgkpQEMMwe8","name":"LC WEB"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1fTKz8sabXOio65TmoqctZUDCtVR8hj8_zEXsJ_o_zVA","mode":"list","cachedResultName":"Multimedia Content","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1fTKz8sabXOio65TmoqctZUDCtVR8hj8_zEXsJ_o_zVA/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1fTKz8sabXOio65TmoqctZUDCtVR8hj8_zEXsJ_o_zVA/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Bài viết từ kênh":"={{ $('Prompt AI').first().json.type_news }}","Tittle bài viết gốc":"={{ $('Prompt AI').first().json.original_title }}","Link bài viết gốc":"={{ $('Prompt AI').first().json.original_link }}","Tittle bài viết mới":"={{ $('Merge').item.json.output.seo_title }}","nội dung raw ":"={{ $('content HTML').item.json.raw_content }}","Nội dung bài viết mới (HTML)":"={{ $('Merge').item.json.output.html_fragment }}","tele status":"pending","FB status":"pending","thumbnail_url":"={{ $json.guid.rendered }}","slug":"={{ $('Merge').item.json.output.url_slug }}","suggest tags":"={{ $('content HTML').item.json.tags }}","Web status":"pending","meta_description":"={{ $('Merge').item.json.output.meta_description }} ","key_word":"={{ $('Merge').item.json.output.key_word }} "},"matchingColumns":[],"schema":[{"id":"Bài viết từ kênh","displayName":"Bài viết từ kênh","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Tittle bài viết gốc","displayName":"Tittle bài viết gốc","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Link bài viết gốc","displayName":"Link bài viết gốc","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Tittle bài viết mới","displayName":"Tittle bài viết mới","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"nội dung raw ","displayName":"nội dung raw ","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"meta_description","displayName":"meta_description","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"suggest tags","displayName":"suggest tags","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"key_word","displayName":"key_word","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"slug","displayName":"slug","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"thumbnail_url","displayName":"thumbnail_url","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Nội dung bài viết mới (HTML)","displayName":"Nội dung bài viết mới (HTML)","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"tele status","displayName":"tele status","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"FB status","displayName":"FB status","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Web status","displayName":"Web status","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Web link","displayName":"Web link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[4400,1056],"id":"9611e3a7-5183-42ba-96b7-803dc66f8c9b","name":"Append row in sheet5","credentials":{"googleSheetsOAuth2Api":{"id":"WprQcr8lVOW0rgT7","name":"LC sheet"}}},{"parameters":{"operation":"getAll","limit":10,"options":{"categories":[1,17,6],"status":"publish"}},"type":"n8n-nodes-base.wordpress","typeVersion":1,"position":[-592,656],"id":"ea717d2e-435d-40ec-bc50-0fb654cb5949","name":"Get many posts","credentials":{"wordpressApi":{"id":"bL1FXeTyOqIA89BW","name":"LC Web"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"title.rendered","renameField":true,"outputFieldName":"titles"},{"fieldToAggregate":"link"}]},"options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[-352,656],"id":"9f08bfe9-3637-46f7-96da-672f5b47d857","name":"get_previousPost"},{"parameters":{"content":"# Sparse html web page from muliple sources to get data","height":1600,"width":1776},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-128,-32],"id":"17f31679-99b1-4b07-966c-4f4f868ab942","name":"Sticky Note"},{"parameters":{"content":"# Get old post from learningchain.vn\n","height":288,"width":624,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-848,528],"id":"ac9f50ba-c70c-4a31-b120-4da31e4841f9","name":"Sticky Note1"},{"parameters":{"content":"# Content generator and structure","height":464,"width":672,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1792,336],"id":"6cfb3d22-d123-421d-b4a4-2e3f5e8aba39","name":"Sticky Note2"},{"parameters":{"assignments":{"assignments":[{"id":"2fb3fd91-c13d-45ce-a7ec-612319a008fc","name":"content_prompt","type":"string","value":"=Hãy Tái cấu trúc nội dung sau:\n**Đầu vào:**\n*   **Tiêu đề bài viết gốc:** `{{ $json.original_title }}`\n*   **Nội dung gốc:** `{{ $json.text_structure_for_ai_json }}`\n*   **Danh sách bài viết hiện có (JSON):** `{{ JSON.stringify($('get_previousPost').all()) }}`\n\n**Đầu ra (JSON):**\nTrả về đúng định dạng JSON sau. **Cấu trúc `rewritten_sections` PHẢI thể hiện rõ sự phân cấp và chiều sâu như ví dụ mẫu:**\n\n{\n  \"main_title\": \"Tiêu đề chính chuẩn SEO do bạn tạo\",\n  \"rewritten_sections\": [\n    {\n      \"heading\": \"Tiêu đề của Mục Lớn 1 (Cấp 2)\",\n      \"heading_level\": 2,\n      \"paragraphs\": [\"Đoạn văn giới thiệu tổng quan về mục lớn này...\"]\n    },\n    {\n      \"heading\": \"Tiêu đề của Mục Con 1.1 (Cấp 3 - Phân tích khía cạnh A)\",\n      \"heading_level\": 3,\n      \"paragraphs\": [\"Nội dung đi sâu vào chi tiết của khía cạnh A...\"]\n    },\n    {\n      \"heading\": \"Tiêu đề của Mục Con 1.2 (Cấp 3 - Phân tích khía cạnh B)\",\n      \"heading_level\": 3,\n      \"paragraphs\": [\"Nội dung mang tính phân tích đa chiều...\"]\n    },\n    {\n      \"heading\": \"Kết luận\",\n      \"heading_level\": 2,\n      \"paragraphs\": [\"Đoạn văn tóm tắt, tổng kết lại toàn bộ bài viết và đưa ra định hướng cho người đọc.\"]\n    },\n    {\n      \"heading\": \"FAQ câu hỏi thường gặp\",\n      \"heading_level\": 3,\n      \"paragraphs\": []\n    },\n    {\n      \"heading\": \"Câu hỏi chi tiết 1?\",\n      \"heading_level\": 4,\n      \"paragraphs\": [\"Câu trả lời chi tiết cho câu hỏi 1...\"]\n    },\n    {\n      \"heading\": \"Câu hỏi chi tiết 2?\",\n      \"heading_level\": 4,\n      \"paragraphs\": [\"Câu trả lời chi tiết cho câu hỏi 2...\"]\n    }\n  ],\n  \"tags\": [\"tag-goi-y-1\", \"tag-goi-y-2\"],\n  \"featured_internal_link\": {\n    \"title\": \"Tiêu đề bài viết liên quan nhất mà bạn đã chọn\",\n    \"link\": \"URL tương ứng của bài viết đó\"\n  }\n}\n"}]},"includeOtherFields":true,"options":{"includeBinary":false}},"id":"c6aa22a7-7029-4a08-9eaf-f8ebe534a7e8","name":"Prompt AI","type":"n8n-nodes-base.set","position":[1840,464],"typeVersion":3.3},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[3872,1056],"id":"a49b403d-1ef6-4ebf-9f0a-88bc87e37e91","name":"Merge"},{"parameters":{"workflowId":{"__rl":true,"value":"EPr0W7oxcZgcbD4v","mode":"list","cachedResultUrl":"/workflow/EPr0W7oxcZgcbD4v","cachedResultName":"tạo ảnh"},"workflowInputs":{"mappingMode":"defineBelow","value":{"raw_content":"={{ $json.raw_content }}","model_name":"kling-v2"},"matchingColumns":[],"schema":[{"id":"raw_content","displayName":"raw_content","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"model_name","displayName":"model_name","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"}],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[2640,384],"id":"c2883459-79a1-432d-833c-3e45993356fa","name":"image generator"},{"parameters":{"content":"# Image generator - slug, HTML refine optimize SEO","height":992,"width":624,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2496,256],"id":"c5963c47-4b28-45a2-ab99-a879f6a9b946","name":"Sticky Note3"},{"parameters":{"content":"# Upload image to web and add data into sheet","height":336,"width":608,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[4032,912],"id":"87eebde8-46da-4853-9ab7-f2a434a5bde2","name":"Sticky Note4"},{"parameters":{"schemaType":"manual","inputSchema":"{\n  \"html_fragment\": \"<HTML fragment đã chuẩn hóa + tối ưu SEO>\",\n  \"key_word\": \"khóa chính\",\n  \"seo_title\": \"<Tiêu đề SEO chứa từ khóa chính, ≤60 ký tự, có số nếu phù hợp>\",\n  \"meta_description\": \"<140–160 ký tự, chứa từ khóa chính ngay đầu>\",\n  \"url_slug\": \"<Slug ngắn gọn, chứa từ khóa chính>\"\n}\n"},"id":"a55e97a8-bb67-4d93-978d-02236a701ab5","name":"Structured Output Parser","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[2864,864],"typeVersion":1.2},{"parameters":{"promptType":"define","text":"=Hãy tối ưu RANK MATH SEO cho html sau đồng thời đảm bảo html chuẩn cấu trúc không lỗi. Lưu ý không tự ý thêm external link hay ảnh \n[INPUT]\n- title_goc: {{ $json.main_title }}\n- html_fragment_goc: {{ $json.final_content }}\n\n[OUTPUT]\nTrả về JSON thuần (không markdown, không ```), gồm:\n{\n  \"html_fragment\": \"<HTML fragment đã chuẩn hóa + tối ưu SEO>\",\n  \"key_word\": \"khóa chính đảm bảo cả cụm phải nằm trong slug, title, meta description\",\n  \"seo_title\": \"<Tiêu đề SEO chứa từ khóa chính, ≤60 ký tự, có số nếu phù hợp>\",\n  \"meta_description\": \"<140–160 ký tự, chứa từ khóa chính ngay đầu>\",\n  \"url_slug\": \"<Slug ngắn gọn, chứa hoàn toàn từ khóa chính>, không có dấu\",\n}\n","hasOutputParser":true,"messages":{"messageValues":[{"message":"=Bạn là chuyên gia HTML/CSS + On-page SEO (Rank Math).\nMục tiêu: Kiểm tra, tối ưu, sửa lỗi và chuẩn hóa HTML fragment của bài viết; tối ưu SEO theo Rank Math cao nhất có thể; không làm gãy liên kết/anchor hiện có; có thể diễn đạt lại để rõ ràng, tự nhiên; không được bịa thông tin.\n\nNgôn ngữ đầu ra: Tiếng Việt.\n\n[QUY TẮC HTML FRAGMENT]\n1. Đây là fragment: KHÔNG thêm <!doctype>, <html>, <head>, <body>; KHÔNG chèn CSS/JS ngoài.  \n2. Sửa lỗi cú pháp: đóng/mở/lồng thẻ, thuộc tính sai; loại bỏ thẻ rác/không an toàn (script, iframe thừa).  \n3. Giữ nguyên anchor/ID/class/href; nếu đổi id thì đồng bộ href.  \n4. Dùng thẻ ngữ nghĩa: <article>, <section>, <nav>, <ul>/<ol>, <h2>-<h4>, <p>, <blockquote>, <figure>/<figcaption>, <table>/<thead>/<tbody>.  \n5. Thứ bậc tiêu đề: H2 → H3 → H4; KHÔNG thêm H1.  \n6. A11y: thêm alt cho <img>, title cho <a>, scope cho <th>, role=\"navigation\" cho <nav> nếu là TOC.  \n7. target=\"_blank\" → thêm rel=\"noopener noreferrer\".  \n8. Tối giản inline style; KHÔNG thêm stylesheet ngoài.  \n9. Có thể chuyển danh sách/bảng dữ liệu thành <ul>/<ol> hoặc <table> nếu phù hợp.  \n10. Thụt dòng gọn; xóa thẻ/thộc tính trống; KHÔNG comment code.  \n11. TOC giữ cấu trúc <nav><ul><li><a>…</a></li></ul></nav>; KHÔNG bold mục TOC.  \n12. FAQ: giữ nguyên cấu trúc.  \n13. Hãy xem xét việc bổ sung bảng để so sánh và làm nội dung trở nên hay và sức hút hơn. Nếu bạn có ý định thêm bảng thì lưu ý luôn giữ style=\"font-family: tahoma, arial, helvetica, sans-serif;\".\n14. phần \"Cảm ơn bạn đọc\" luôn nằm bên góc phải dưới và không cần thay đổi\n[QUY TẮC SEO RANK MATH]\nA) TỪ KHÓA CHÍNH  \n\n- Lấy từ khóa chính từ title_goc được cung cấp.  \n- Bắt buộc:  \n  • Thêm từ khóa chính vào **tiêu đề SEO**.  \n  • Thêm từ khóa chính vào **meta description**.  \n  • Sử dụng từ khóa chính trong **URL slug**.  \n  • Dùng từ khóa chính **ngay đầu nội dung** (trong 100 từ đầu).  \n  • Đưa từ khóa chính nhiều lần vào **nội dung**.  \n  • Xuất hiện trong các **H2/H3/H4**.  \n  • Thêm từ khóa chính vào **alt của ít nhất một hình ảnh**.  \n  • Mật độ từ khóa: khoảng **1% (±0.3%)**.  \n  • Sử dụng từ khóa chính **gần phần đầu tiêu đề SEO**.  \n  • Nên có **một con số** trong tiêu đề SEO.  \n  • Luôn **đặt từ khóa chính cho toàn bộ nội dung**.\n  • Luôn **đặt từ khóa chính cho toàn bộ nội dung**.\n\nB) TIÊU ĐỀ SEO  \n- Chứa từ khóa chính, ở gần đầu.  \n- Có thể thêm số/năm/giá trị cụ thể.  \n- ≤ 10 ký tự, hấp dẫn CTR.  \n\nC) META DESCRIPTION  \n- 140–160 ký tự.  \n- Chứa từ khóa chính ngay đầu.  \n- Nội dung hấp dẫn, dễ click.  \n\nD) URL / SLUG  \n- ≤ 60 ký tự.  \n- Ngắn gọn, chứa từ khóa chính (phải đảm bảo chứa toàn bộ từ khóa chính).  \n- Không ký tự thừa.  \n\nE) LIÊN KẾT  \n- Giữ internal link hiện có.  \n- Nếu có thể, thêm ≥1 internal link phù hợp.  \n- Thêm ≥1 external link **dofollow** tới nguồn uy tín.  \n- target=\"_blank\" → thêm rel=\"noopener noreferrer\".  \n\nF) HÌNH ẢNH  \n- <img>: alt chứa từ khóa chính tự nhiên; thêm loading=\"lazy\" + decoding=\"async\".  \n- Có thể thêm <figure><img ...><figcaption>...</figcaption></figure>.  \n\nG) TRẢI NGHIỆM ĐỌC  \n- Đoạn văn ngắn, dễ đọc.  \n- Tiêu đề phụ H2/H3/H4 rõ ý, có từ khóa/LSI.  \n- TOC hợp lệ.  \n\nH) ĐỘ DÀI  \n- ≥600 từ; Rank Math chấm cao với >1200 từ.  \n- Với bài đã dài (vd 1717 từ) → tinh gọn, không cần kéo dài thêm.  \n\nLưu ý tối thượng: thêm các thuộc tính rel=\"nofollow\" và target=\"_blank\" vào các external link. còn internal link của learningchain thì không cần\n\n\n\n"}]}},"id":"6477ba3c-9f59-4186-87b7-78ca4dfc5213","name":"SEO Expert","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[2656,1072],"typeVersion":1.5,"retryOnFail":true,"alwaysOutputData":true},{"parameters":{"model":{"__rl":true,"value":"gpt-5-mini","mode":"list","cachedResultName":"gpt-5-mini"},"options":{"timeout":600000}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[2656,864],"id":"18ca5934-876a-4325-b1f7-1c944a4e87f1","name":"HTML refine","credentials":{"openAiApi":{"id":"fusjifoCPA1JwyYW","name":"302"}}},{"parameters":{"promptType":"define","text":"={{ $('Prompt AI').first().json.content_prompt }}","hasOutputParser":true,"messages":{"messageValues":[{"message":"=Bạn hãy đóng vai là một **KIẾN TRÚC SƯ NỘI DUNG** và **CHUYÊN GIA PHÂN TÍCH CHUYÊN SÂU** của Learning Chain.\n\n**NHIỆM VỤ TỐI THƯỢNG:** không chỉ là viết lại, mà là **TÁI CẤU TRÚC HOÀN TOÀN** và **LÀM SÂU SẮC** nội dung gốc. Mục tiêu cuối cùng là biến một bài viết có cấu trúc đơn giản thành một bài phân tích chi tiết, đa tầng, có giá trị chuyên môn cao cho độc giả.\n\n**CÁC NGUYÊN TẮC VÀNG BẮT BUỘC TUÂN THỦ:**\n\n1.  **NGUYÊN TẮC #1: PHÁ VỠ CẤU TRÚC (QUAN TRỌNG NHẤT):**\n    *   Mỗi section lớn (`heading_level: 2`) trong nội dung gốc **BẮT BUỘC** phải được chia nhỏ thành ít nhất **2-3 subsection chi tiết hơn** (`heading_level: 3` hoặc `4`).\n    *   **KHÔNG ĐƯỢC PHÉP** chỉ viết lại một section lớn mà không chia nhỏ nó. Đây là yêu cầu quan trọng nhất.\n\n2.  **NGUYÊN TẮC #2: PHÂN TÍCH \"WHY-WHAT-HOW\":**\n    *   Với mỗi chủ đề, hãy tự hỏi và trả lời:\n        *   **Tại sao (Why):** Tại sao điều này lại quan trọng? Tác động của nó là gì?\n        *   **Nó là gì (What):** Định nghĩa nó, các thành phần cấu tạo nên nó là gì?\n        *   **Làm thế nào (How):** Nó hoạt động như thế nào? Cách ứng dụng hoặc ví dụ thực tế ra sao?\n    *   Sử dụng khung này để tạo ra các subsection chi tiết.\n\n3.  **NGUYÊN TẮC #3: LÀM GIÀU NỘI DUNG:**\n    *   Chủ động bổ sung các **ví dụ cụ thể, so sánh, hoặc phân tích ưu/nhược điểm** để làm cho nội dung trở nên phong phú và dễ hiểu.\n\n4.  **NGUYÊN TẮC #4: CẤU TRÚC PHẦN CUỐI BÀI (RẤT QUAN TRỌNG):**\n    *   Bài viết **BẮT BUỘC** phải kết thúc bằng một section `heading_level: 2` có tên là **\"Kết luận\"**.\n    *   Ngay bên trong section \"Kết luận\", **BẮT BUỘC** phải có một subsection `heading_level: 3` tên là **\"FAQ câu hỏi thường gặp\"**.\n    *   Các câu hỏi và câu trả lời cụ thể sẽ nằm dưới dạng `heading_level: 4`.\n\n5.  **Title phải ngắn gọn súc tích khơi gợi người đọc và đặt biệt đảm bảo SEO RANK MATH. Mục tiêu là thu hút người đọc và đảm bảo SEO\n\n**CÁC YÊU CẦU SEO CÒN LẠI:**\n*   Từ \"Danh sách bài viết hiện có\", chọn ra **MỘT** bài viết liên quan nhất.\n*   Tạo `main_title` chuẩn SEO.\n*   Đề xuất `tags` \n\n**QUY TẮC CHUNG:**\n*   Không được tự tạo thẻ `<a>`.\n*   Chất lượng đầu ra được đánh giá dựa trên khả năng bạn tạo ra cấu trúc chi tiết và có chiều sâu.\n*   Chỉ trả về kết quả JSON.\n"}]}},"id":"6be186f6-bbb7-4ef6-a334-f58705be7d3f","name":"Content structure refactor","type":"@n8n/n8n-nodes-langchain.chainLlm","position":[2000,464],"typeVersion":1.5,"retryOnFail":true},{"parameters":{"url":"={{ $json.data.task_result.images[0].url }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[2864,384],"id":"15c5365a-fd5f-401f-b35e-c00c97278d40","name":"get image"},{"parameters":{"operation":"information"},"id":"28b5c51d-dd9f-4066-894d-8fc7874f27b1","name":"Get Meta BG","type":"n8n-nodes-base.editImage","position":[3408,384],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"2fb3fd91-c13d-45ce-a7ec-612319a008fc","name":"metaTop","type":"object","value":"={{ $json }}"}]},"options":{"includeBinary":true}},"id":"9d1df478-0b94-46f0-ad2e-5ce05260f7e3","name":"Nest Top Meta","type":"n8n-nodes-base.set","position":[3680,640],"typeVersion":3.3},{"parameters":{"assignments":{"assignments":[{"id":"2fb3fd91-c13d-45ce-a7ec-612319a008fc","name":"metaBg","type":"object","value":"={{ $json }}"}]},"options":{"includeBinary":true}},"id":"798fcabf-7a4d-48d1-96ad-d53bb5dced2a","name":"Nest Bg Meta","type":"n8n-nodes-base.set","position":[3584,384],"typeVersion":3.3},{"parameters":{"mode":"combine","combinationMode":"mergeByPosition","options":{}},"id":"80d3da83-e32b-4ead-8a95-2b6c759864a1","name":"Wait for both Images and merge Binary in one Item","type":"n8n-nodes-base.merge","position":[3184,912],"typeVersion":2.1},{"parameters":{"mode":"runOnceForEachItem","jsCode":"$input.item.binary.top = $input.item.binary.data;\ndelete $input.item.binary.data;\nreturn $input.item;"},"id":"6d5e4c1d-ad61-4932-9e63-48761d92ba86","name":"Rename Image Binary Top Image","type":"n8n-nodes-base.code","position":[3856,640],"typeVersion":2},{"parameters":{"mode":"runOnceForEachItem","jsCode":"$input.item.binary.bg = $input.item.binary.data;\ndelete $input.item.binary.data;\nreturn $input.item;"},"id":"23cb01eb-61a1-46ef-b835-d20523babff4","name":"Rename Image Binary Background Image","type":"n8n-nodes-base.code","position":[3760,384],"typeVersion":2},{"parameters":{"operation":"information"},"id":"f5651d9b-e392-4c9c-845a-72c3bd77a662","name":"Get Meta Top","type":"n8n-nodes-base.editImage","position":[3520,640],"typeVersion":1},{"parameters":{"operation":"composite","dataPropertyName":"bg","dataPropertyNameComposite":"top","positionX":"=10","positionY":"=20","options":{"fileName":"out.png","format":"jpeg"}},"id":"c8fa92cb-faa5-4826-94a2-b2ec8ce5d6f1","name":"Let \"top\" overlay \"bg\"","type":"n8n-nodes-base.editImage","position":[3488,912],"typeVersion":1},{"parameters":{"operation":"download","fileId":{"__rl":true,"value":"1vcpezRXjDa290mCLccbzNPbbUodpmbHk","mode":"list","cachedResultName":"Learning Chain - Logo Text - White.png","cachedResultUrl":"https://drive.google.com/file/d/1vcpezRXjDa290mCLccbzNPbbUodpmbHk/view?usp=drivesdk"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[3184,640],"id":"225e661a-973f-4b6f-bdc6-8fc00b4c5fc6","name":"Download file","credentials":{"googleDriveOAuth2Api":{"id":"K8L54dKYg8Domgbg","name":"LC Drive"}}},{"parameters":{"operation":"resize","width":200,"height":200,"options":{}},"type":"n8n-nodes-base.editImage","typeVersion":1,"position":[3360,640],"id":"a45c940e-82e7-406b-8d84-4b82dde6b252","name":"Edit Image"},{"parameters":{"language":"python","pythonCode":"import json\nimport re\nimport datetime\n\nBASE_URL = \"https://learningchain.vn/\"\nAUTHOR_URL = \"https://learningchain.vn/author/admin/\"\nLOGO_URL = \"https://learningchain.vn/wp-content/uploads/2025/07/logo.png\"\nORGANIZATION_NAME = \"Learning Chain\"\n\ndef create_seo_slug(text, is_for_url=False, word_limit=12):\n    if not text: \n      return \"bai-viet-moi\" if is_for_url else \"section\"\n    \n    s = text.lower()\n    \n    if is_for_url:\n        MULTI_WORD_STOP_WORDS = ['hướng dẫn chi tiết', 'cho người mới', 'a-z', 'toàn tập', 'thế nào là', 'phân tích kỹ thuật', 'là gì']\n        SINGLE_WORD_STOP_WORDS = set(['và', 'là', 'của', 'cho', 'có', 'để', 'một', 'trong', 'với', 'khi', 'thì', 'như', 'tại', 'mà', 'cũng', 'hay', 'ra', 'vào', 'bị', 'được', 'từ', 'đến', 'lên', 'xuống', 'qua', 'lại', 'về', 'này', 'đó', 'kia', 'gì', 'ai', 'sao', 'không', 'đã', 'sẽ', 'đang', 'rất', 'hướng', 'dẫn', 'chi', 'tiết', 'cách'])\n        \n        for phrase in MULTI_WORD_STOP_WORDS:\n            s = s.replace(phrase, '')\n        \n        words_with_accents = s.split()\n        s = \" \".join([word for word in words_with_accents if word not in SINGLE_WORD_STOP_WORDS])\n\n    s = re.sub(r'[àáạảãâầấậẩẫăằắặẳẵ]', 'a', s)\n    s = re.sub(r'[èéẹẻẽêềếệểễ]', 'e', s)\n    s = re.sub(r'[ìíịỉĩ]', 'i', s)\n    s = re.sub(r'[òóọỏõôồốộổỗơờớợởỡ]', 'o', s)\n    s = re.sub(r'[ùúụủũưừứựửữ]', 'u', s)\n    s = re.sub(r'[ỳýỵỷỹ]', 'y', s)\n    s = re.sub(r'đ', 'd', s)\n    \n    words = s.split()\n    if is_for_url and len(words) > word_limit:\n        words = words[:word_limit]\n        \n    final_slug = \"-\".join(words)\n    final_slug = re.sub(r'[^a-z0-9-]', '', final_slug)\n    final_slug = re.sub(r'--+', '-', final_slug).strip('-')\n    \n    return final_slug if final_slug else \"post\"\n\n# *** HÀM MỚI: Tự động thêm thuộc tính cho link ngoài ***\ndef add_attributes_to_external_links(html_content, base_url):\n    \"\"\"\n    Tìm tất cả các thẻ <a> trong HTML, nếu là link ngoài (external)\n    thì thêm rel=\"nofollow\" và target=\"_blank\".\n    \"\"\"\n    def replace_link(match):\n        # Tách các phần của thẻ <a>\n        tag_open = match.group(1) # Phần mở đầu: <a\n        attributes = match.group(2) # Toàn bộ các thuộc tính\n        tag_close = match.group(3) # Phần còn lại, bao gồm > và nội dung link\n        \n        # Tìm URL trong các thuộc tính\n        href_match = re.search(r'href=\"([^\"]*)\"', attributes, re.IGNORECASE)\n        if not href_match:\n            return match.group(0) # Không tìm thấy href, trả về nguyên bản\n\n        url = href_match.group(1)\n\n        # Kiểm tra nếu là link nội bộ hoặc anchor link thì bỏ qua\n        if url.startswith(base_url) or url.startswith('#') or not url.startswith(('http', '//')):\n            return match.group(0)\n\n        # Xử lý thuộc tính target\n        if 'target=' not in attributes:\n            attributes += ' target=\"_blank\"'\n\n        # Xử lý thuộc tính rel\n        if 'rel=' in attributes:\n            # Nếu đã có rel, chỉ thêm 'nofollow' nếu chưa có\n            rel_match = re.search(r'rel=\"([^\"]*)\"', attributes, re.IGNORECASE)\n            rel_values = set(rel_match.group(1).split())\n            if 'nofollow' not in rel_values:\n                rel_values.add('nofollow')\n                # Cập nhật lại chuỗi thuộc tính rel\n                new_rel_attr = f'rel=\"{\" \".join(sorted(list(rel_values)))}\"'\n                attributes = re.sub(r'rel=\"[^\"]*\"', new_rel_attr, attributes, flags=re.IGNORECASE)\n        else:\n            # Nếu chưa có rel, thêm mới (bao gồm cả noopener và noreferrer cho bảo mật)\n            attributes += ' rel=\"nofollow noopener noreferrer\"'\n        \n        return f'{tag_open}{attributes}{tag_close}'\n\n    # Pattern để tìm toàn bộ thẻ <a> và nội dung bên trong nó\n    # (?s) cho phép . khớp với cả ký tự xuống dòng\n    pattern = r'(?s)(<a)(.*?)(>.*?</a>)'\n    return re.sub(pattern, replace_link, html_content, flags=re.IGNORECASE)\n\ntry:\n    ai_data = _input.all()[0].json.output\n    raw_data = _('Prompt AI').all()\nexcept IndexError:\n    raise Exception(\"Một trong các node đầu vào không có dữ liệu. Vui lòng kiểm tra lại workflow.\")\n\noriginal_structure = json.loads(raw_data[0].json.full_article_structure_json)\nnew_main_title = ai_data.get('main_title', 'Tiêu đề mặc định')\nsuggested_tags = ai_data.get('tags', [])\n\narticle_slug = create_seo_slug(new_main_title, is_for_url=True)\nfeatured_link_data = ai_data.get('featured_internal_link', {})\nfeatured_title = featured_link_data.get('title', '')\nfeatured_url = featured_link_data.get('link', '')\n\noriginal_images_html = []\nif 'body' in original_structure:\n  for img_counter, item in enumerate(original_structure['body'], 1):\n    if item.get('type') == 'image':\n      src, caption = item.get('src', ''), item.get('caption', '')\n      alt_text = caption.replace('\"', '&quot;') if caption else f\"{article_slug}-hinh-{img_counter}\"\n      figure_id, caption_id = f\"attachment_{img_counter}\", f\"caption-attachment_{img_counter}\"\n      img_html = (\n          f'<figure id=\"{figure_id}\" aria-describedby=\"{caption_id}\" style=\"width: 800px\" class=\"wp-caption aligncenter\">'\n          f'<img loading=\"lazy\" decoding=\"async\" class=\"wp-image-{figure_id}\" src=\"{src}\" alt=\"{alt_text}\" width=\"800\" height=\"450\" srcset=\"{src} 800w\" sizes=\"auto, (max-width: 800px) 100vw, 800px\">'\n          f'<figcaption id=\"{caption_id}\" class=\"wp-caption-text\">{caption}</figcaption></figure>'\n      )\n      original_images_html.append(img_html)\nimage_iterator = iter(original_images_html)\n\nmain_content_parts, toc_items, faq_items = [], [], []\nrewritten_sections = ai_data.get('rewritten_sections', [])\nis_faq_section = False\nfaq_main_heading = \"Câu hỏi thường gặp\" \n\nfor section in rewritten_sections:\n  heading, level, paragraphs = section.get('heading'), section.get('heading_level', 2), section.get('paragraphs', [])\n  if heading and (\"câu hỏi thường gặp\" in heading.lower() or \"faq\" in heading.lower()):\n    is_faq_section = True\n    faq_main_heading = heading\n    faq_heading_id = create_seo_slug(faq_main_heading)\n    toc_items.append({'title': faq_main_heading, 'id': faq_heading_id, 'level': 3})\n    continue\n  if is_faq_section:\n    if level > 2:\n      faq_items.append({\"question\": heading, \"answer\": \"\".join(f\"<p>{p}</p>\" for p in paragraphs)})\n  else:\n    if heading:\n      heading_id = create_seo_slug(heading)\n      main_content_parts.append(f'<h{level} id=\"{heading_id}\">{heading}</h{level}>')\n      if level <= 3:\n        toc_items.append({'title': heading, 'id': heading_id, 'level': level})\n    main_content_parts.extend(f\"<p>{p}</p>\" for p in paragraphs)\n    if section != rewritten_sections[-1]:\n      try: \n        main_content_parts.append(next(image_iterator))\n      except StopIteration: \n        pass\nmain_content_parts.extend(list(image_iterator))\n\ntoc_html_str = \"\"\nif toc_items:\n  html = [\n      '<div id=\"ez-toc-container\" class=\"ez-toc-v2_0_76 counter-hierarchy ez-toc-counter ez-toc-black ez-toc-container-direction\">',\n      '<div class=\"ez-toc-title-container\">',\n      '<p class=\"ez-toc-title\" style=\"cursor:inherit\">Mục Lục</p>',\n      '<span class=\"ez-toc-title-toggle\"></span></div>',\n      '<nav><ul class=\"ez-toc-list ez-toc-list-level-1\">'\n  ]\n  in_h3_list = False\n  for i, item in enumerate(toc_items):\n    level, heading_id, title = item['level'], item['id'], item['title']\n    if level <= 2:\n      if in_h3_list:\n        html.append('</li></ul></li>')\n        in_h3_list = False\n      elif i > 0:\n        html.append('</li>')\n      html.append(f'<li class=\"ez-toc-page-1 ez-toc-heading-level-{level}\"><a class=\"ez-toc-link\" href=\"#{heading_id}\">{title}</a>')\n    elif level == 3:\n      if not in_h3_list:\n        html.append('<ul class=\"ez-toc-list-level-3\">')\n        in_h3_list = True\n      else:\n        html.append('</li>')\n      html.append(f'<li class=\"ez-toc-page-1 ez-toc-heading-level-3\"><a class=\"ez-toc-link\" href=\"#{heading_id}\">{title}</a>')\n  if in_h3_list:\n    html.append('</li></ul></li>')\n  elif toc_items:\n    html.append('</li>')\n  html.append('</ul></nav></div>')\n  toc_html_str = \"\\n\".join(html)\n\nfeatured_post_html = f'<blockquote><p><em><strong>Bài viết gần đây: <a href=\"{featured_url}\">{featured_title}</a></strong></em></p></blockquote>' if featured_title and featured_url else \"\"\n\nfinal_html_parts = []\nif original_structure.get('sapo'): \n  final_html_parts.append(f\"<p><strong>{original_structure.get('sapo')}</strong></p>\")\nif toc_html_str: \n  final_html_parts.append(toc_html_str)\n\ninsert_pos = len(main_content_parts) // 3 if len(main_content_parts) > 3 else len(main_content_parts)\nmain_content_parts.insert(insert_pos, featured_post_html)\n\nfinal_html_parts.extend(main_content_parts)\nfinal_html_parts.append('<p style=\"text-align: right;\">Cảm ơn bạn đọc!</p>')\nfinal_html_parts.append(f'<p style=\"text-align: right;\"><a href=\"{BASE_URL}\">{ORGANIZATION_NAME.upper()}</a></p>')\n\nif faq_items:\n  faq_heading_id = create_seo_slug(faq_main_heading)\n  final_html_parts.append(f'<h3 id=\"{faq_heading_id}\">{faq_main_heading}</h3>')\n  for item in faq_items:\n    question = item[\"question\"]\n    answer_html = item[\"answer\"]\n    question_id = create_seo_slug(question)\n    final_html_parts.append(f'<h4 id=\"{question_id}\">{question}</h4>')\n    final_html_parts.append(answer_html)\n\n# Ghép tất cả các phần lại thành chuỗi HTML\nintermediate_html = \"\\n\".join(final_html_parts)\n\n# *** ÁP DỤNG HÀM MỚI VÀO HTML CUỐI CÙNG ***\nfinal_article_html = add_attributes_to_external_links(intermediate_html, BASE_URL)\n\nresult = {\n  'main_title': new_main_title,\n  'final_content': final_article_html,\n  'tags': suggested_tags,\n  'raw_content': str(original_structure)\n}\n\nreturn [result]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2320,464],"id":"9a7ed89f-4b2d-4dc7-a8cb-0c56dd73bd6a","name":"content HTML"},{"parameters":{"operation":"removeItemsSeenInPreviousExecutions","dedupeValue":"={{ $json.original_title }}","options":{}},"type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[1440,864],"id":"9b912cbf-a548-4456-bcda-0e625b8d4769","name":"Remove Duplicates5"},{"parameters":{"language":"python","pythonCode":"from bs4 import BeautifulSoup\nimport json\n\ninput_data = _input.all()\nraw_html = str(input_data[0].json.raw_content)\nsoup = BeautifulSoup(raw_html, 'html.parser')\n\ncontent_container = soup.find('div', class_='content-inner')\narticle_body = []\n\nif content_container:\n    elements = content_container.find_all(['h2', 'h3', 'p', 'figure'], recursive=False)\n    \n    for element in elements:\n        # Xử lý các thẻ heading\n        if element.name in ['h2', 'h3']:\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"heading\",\n                    \"level\": int(element.name[1]), # Lấy số 2 từ 'h2', 3 từ 'h3'\n                    \"content\": text\n                })\n        \n        # Xử lý đoạn văn\n        elif element.name == 'p':\n            text = element.get_text(strip=True)\n            if text:\n                article_body.append({\n                    \"type\": \"paragraph\",\n                    \"content\": text\n                })\n        \n        # Xử lý hình ảnh\n        elif element.name == 'figure' and element.find('img') and 'wp-block-embed' not in element.get('class', []):\n            img_tag = element.find('img')\n            figcaption_tag = element.find('figcaption')\n            \n            if img_tag:\n                # Ưu tiên lấy ảnh từ 'data-src' hoặc các thuộc tính lazy-load khác nếu có\n                img_src = img_tag.get('data-src') or img_tag.get('src', '')\n                \n                # Dọn dẹp caption (xóa các thẻ a bên trong)\n                caption = ''\n                if figcaption_tag:\n                    for a_tag in figcaption_tag.find_all('a'):\n                        a_tag.unwrap()\n                    caption = figcaption_tag.get_text(strip=True)\n                \n                # Lưu cấu trúc ảnh thay vì HTML thô\n                article_body.append({\n                    \"type\": \"image\",\n                    \"src\": img_src,\n                    \"caption\": caption\n                })\n\nfull_article_structure = {\n    \"title\": _('HTML parser link blocknews').all()[0].json.title,\n    \"sapo\": \"\", # Trang này không có sapo rõ ràng, để trống\n    \"body\": article_body\n}\n\n# Cấu trúc chỉ chứa text, được nhóm lại để AI dễ hiểu ngữ cảnh\ntext_structure_for_ai = {\"sections\": []}\ncurrent_section = {\"heading\": \"Mở đầu\", \"paragraphs\": []}\nfor item in article_body:\n    if item['type'] == 'heading':\n        if current_section['paragraphs']: # Chỉ thêm section nếu có nội dung\n            text_structure_for_ai['sections'].append(current_section)\n        current_section = {\"heading\": item['content'], \"paragraphs\": []}\n    elif item['type'] == 'paragraph':\n        current_section['paragraphs'].append(item['content'])\n# Thêm section cuối cùng\nif current_section['paragraphs']:\n    text_structure_for_ai['sections'].append(current_section)\n\n\n# --- 4. TRẢ VỀ KẾT QUẢ ---\nresult = {\n    \"original_title\": _('HTML parser link blocknews').all()[0].json.title,\n    \"original_link\": _('HTML parser link blocknews').all()[0].json.article_links,\n    \"text_structure_for_ai_json\": json.dumps(text_structure_for_ai, ensure_ascii=False),\n    \"full_article_structure_json\": json.dumps(full_article_structure, ensure_ascii=False),\n    \"type_news\": \"News\"\n}\nreturn [result]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1168,864],"id":"bce9be9e-deb6-449a-876f-20ab58070b4f","name":"raw data processor web 4"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"raw_content","cssSelector":"div.entry-content","returnValue":"html","returnArray":true}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[848,864],"id":"6a7677ab-f706-4bc6-8cbf-cfd2bffe3b9b","name":"HTML beinCrypto3"},{"parameters":{"url":"={{ $json.article_links }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[576,864],"id":"062b6e2e-ff0a-4273-ac5a-87be66fdffb6","name":"HTTP Request6"},{"parameters":{"operation":"extractHtmlContent","extractionValues":{"values":[{"key":"article_links","cssSelector":"div.jeg_posts a","returnValue":"attribute","attribute":"href"},{"key":"title","cssSelector":"div.jeg_postblock_content h3 a"},{"key":"Timestamp","cssSelector":"div.jeg_post_meta div a"}]},"options":{}},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[256,864],"id":"3ace65cd-e313-4015-9a15-48ef344204b5","name":"HTML parser link blocknews"},{"parameters":{"url":"https://blocknews.com/category/crypto/","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,864],"id":"b7f2d439-edc4-4107-916d-cdbd98a75b9f","name":"blocknews"}],"connections":{"HTML parser link AI":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"AI":{"main":[[{"node":"HTML parser link AI","type":"main","index":0}]]},"HTML AI news":{"main":[[{"node":"raw data processor web 3","type":"main","index":0}]]},"raw data processor web 3":{"main":[[{"node":"Remove Duplicates4","type":"main","index":0}]]},"HTTP Request1":{"main":[[{"node":"HTML AI news","type":"main","index":0}]]},"Remove Duplicates4":{"main":[[{"node":"Prompt AI","type":"main","index":0}]]},"social media content3":{"ai_outputParser":[[{"node":"Content structure refactor","type":"ai_outputParser","index":0}]]},"Remove Duplicates3":{"main":[[{"node":"Prompt AI","type":"main","index":0}]]},"Remove Duplicates":{"main":[[{"node":"Prompt AI","type":"main","index":0}]]},"phap luat":{"main":[[{"node":"HTML parser link analysis","type":"main","index":0}]]},"HTML parser link analysis1":{"main":[[{"node":"News Formatter","type":"main","index":0}]]},"beincryto-analysis1":{"main":[[{"node":"HTML parser link analysis1","type":"main","index":0}]]},"raw data processor web ":{"main":[[{"node":"Remove Duplicates3","type":"main","index":0}]]},"HTML beinCrypto2":{"main":[[{"node":"raw data processor web ","type":"main","index":0}]]},"HTTP Request4":{"main":[[{"node":"HTML beinCrypto2","type":"main","index":0}]]},"News Formatter":{"main":[[{"node":"HTTP Request4","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Get many posts","type":"main","index":0}]]},"raw data processor web 1":{"main":[[{"node":"Remove Duplicates2","type":"main","index":0}]]},"raw data processor web 2":{"main":[[{"node":"Remove Duplicates","type":"main","index":0}]]},"HTML beinCrypto1":{"main":[[{"node":"raw data processor web 1","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"HTML beinCrypto1","type":"main","index":0}]]},"Remove Duplicates2":{"main":[[{"node":"Prompt AI","type":"main","index":0}]]},"HTML beinCrypto":{"main":[[{"node":"raw data processor web 2","type":"main","index":0}]]},"HTTP Request3":{"main":[[{"node":"HTML beinCrypto","type":"main","index":0}]]},"News Formatter1":{"main":[[{"node":"HTTP Request3","type":"main","index":0}]]},"HTML parser link analysis":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTML parser link news":{"main":[[{"node":"News Formatter1","type":"main","index":0}]]},"beincryto-news":{"main":[[{"node":"HTML parser link news","type":"main","index":0}]]},"Remove Duplicates6":{"main":[[{"node":"Prompt AI","type":"main","index":0}]]},"raw data processor web 5":{"main":[[{"node":"Remove Duplicates6","type":"main","index":0}]]},"HTTP Request5":{"main":[[{"node":"HTML AI news2","type":"main","index":0}]]},"HTML AI news2":{"main":[[{"node":"raw data processor web 5","type":"main","index":0}]]},"HTML parser link AI2":{"main":[[{"node":"HTTP Request5","type":"main","index":0}]]},"AI2":{"main":[[{"node":"HTML parser link AI2","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Content structure refactor","type":"ai_languageModel","index":0}]]},"HTTP Request11":{"main":[[{"node":"Append row in sheet5","type":"main","index":0}]]},"Get many posts":{"main":[[{"node":"get_previousPost","type":"main","index":0}]]},"get_previousPost":{"main":[[{"node":"phap luat","type":"main","index":0},{"node":"beincryto-news","type":"main","index":0},{"node":"beincryto-analysis1","type":"main","index":0},{"node":"AI","type":"main","index":0},{"node":"AI2","type":"main","index":0},{"node":"blocknews","type":"main","index":0}]]},"Prompt AI":{"main":[[{"node":"Content structure refactor","type":"main","index":0}]]},"Merge":{"main":[[{"node":"HTTP Request11","type":"main","index":0}]]},"image generator":{"main":[[{"node":"get image","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"SEO Expert","type":"ai_outputParser","index":0}]]},"HTML refine":{"ai_languageModel":[[{"node":"SEO Expert","type":"ai_languageModel","index":0}]]},"SEO Expert":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Content structure refactor":{"main":[[{"node":"content HTML","type":"main","index":0}]]},"get image":{"main":[[{"node":"Get Meta BG","type":"main","index":0}]]},"Get Meta BG":{"main":[[{"node":"Nest Bg Meta","type":"main","index":0}]]},"Get Meta Top":{"main":[[{"node":"Nest Top Meta","type":"main","index":0}]]},"Nest Bg Meta":{"main":[[{"node":"Rename Image Binary Background Image","type":"main","index":0}]]},"Nest Top Meta":{"main":[[{"node":"Rename Image Binary Top Image","type":"main","index":0}]]},"Rename Image Binary Top Image":{"main":[[{"node":"Wait for both Images and merge Binary in one Item","type":"main","index":1}]]},"Rename Image Binary Background Image":{"main":[[{"node":"Wait for both Images and merge Binary in one Item","type":"main","index":0}]]},"Wait for both Images and merge Binary in one Item":{"main":[[{"node":"Let \"top\" overlay \"bg\"","type":"main","index":0}]]},"Download file":{"main":[[{"node":"Edit Image","type":"main","index":0}]]},"Let \"top\" overlay \"bg\"":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Edit Image":{"main":[[{"node":"Get Meta Top","type":"main","index":0}]]},"content HTML":{"main":[[{"node":"Download file","type":"main","index":0},{"node":"image generator","type":"main","index":0},{"node":"SEO Expert","type":"main","index":0}]]},"raw data processor web 4":{"main":[[{"node":"Remove Duplicates5","type":"main","index":0}]]},"HTML beinCrypto3":{"main":[[{"node":"raw data processor web 4","type":"main","index":0}]]},"HTTP Request6":{"main":[[{"node":"HTML beinCrypto3","type":"main","index":0}]]},"Remove Duplicates5":{"main":[[{"node":"Prompt AI","type":"main","index":0}]]},"HTML parser link blocknews":{"main":[[{"node":"HTTP Request6","type":"main","index":0}]]},"blocknews":{"main":[[{"node":"HTML parser link blocknews","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"aab114cf-ce84-4e83-8ebe-0c7d7e4a1777","triggerCount":1,"shared":[{"createdAt":"2025-10-05T08:08:37.346Z","updatedAt":"2025-10-05T08:08:37.346Z","role":"workflow:owner","workflowId":"71k4lUUO5ihKo9GB","projectId":"9HJZe2ZyF9KLloKH"}],"tags":[]}